div#icos
  table.table.table-bordered
    tr
      th 
        | Pair Name
        button.btn.btn-sm.btn-outline-primary data-toggle="modal" data-target="#newIco" @click="init_new_ico()"
          | New
      th Resistance
      th Support
      th Current price
      th Auto
      th Action
    tr v-for="ico in ico_list"
      td 
        | {{ ico.pair_name }}
      td.right
        | ({{ ((ico.current_price - ico.resistance_price) / ico.resistance_price).toFixed(2) }}%) - {{ ico.resistance_price }}
      td.right
        | ({{ ((ico.current_price - ico.support_price) / ico.support_price).toFixed(2) }}%) - {{ ico.support_price }}
      td.right
        | {{ ico.current_price }} 
      td.center 
        input type='checkbox' v-model='ico.is_auto' disabled='disabled'
      td.right
        button.btn.btn-sm.btn-outline-primary data-toggle="modal" data-target="#editIco" @click="edit_ico(ico)"
          | Edit      

  = render 'modal_new_ico'    
  = render 'modal_edit_ico'
  / = render 'modal_order'  

javascript:
  $(function(){
    decimal = 8;
    $("#date_input").val(moment().format("Y/MM/DD"));
  });

  // Vue
  var token = document.querySelector("[name='csrf-token']").content;
  axios.defaults.headers.common['X-CSRF-Token'] = token;
  Vue.prototype.$http = axios;

  var app = new Vue({
    el: '#icos',
    data: {
      ico_list: [],
      selected_ico: {},
      new_ico: {}
    },
    computed: {
      
    },
    methods: {
      init_new_ico: function(){
        this.new_ico = {
          pair_name: '',
          resistance_price: 0,
          support_price: 0,
          is_auto: 0,
          support_profit: 0,
          resistance_profit: 0
        }
      },
      get_ico_list: function(){
        var self = this;
        this.$http.get('/ajax/trades/get_ico_list', { params: {}} ).then(function (res){
          self.ico_list = res.data;
        });
      },
      edit_ico: function(ico){
        this.selected_ico = ico;
      },
      update_ico_info: function(ico){
        var self = this;
        this.$http.put('/ajax/trades/update_ico_info', { ico: ico } ).then(function (res){
          self.get_ico_list();
          $('#editIco').modal('hide');
        });
      },
      create_ico: function(){
        var self = this;
        this.$http.post('/ajax/trades/create_ico', {ico: this.new_ico}).then(function (res){
          if(res.data != null){
            self.get_ico_list();
            $('#newIco').modal('hide');
          }            
        });
      },
      init: function(){
        console.log("INIT");
        this.get_ico_list();
        setInterval(this.get_ico_list, 30000);
      }    
    },
    watch: {
      
    },
    created: function() {
      console.log("created");
    },
    mounted: function() {
      console.log("mounted");
      this.init();
    }
  });



